name: CI

on:
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 20
  PNPM_VERSION: 10.15.1

permissions:
  contents: read

jobs:
  branch-status:
    name: Branch status
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name matches convention
        env:
          BRANCH_NAME: ${{ github.head_ref }}
          BASE_REF: ${{ github.base_ref }}
        run: |
          echo "Checking branch name: ${BRANCH_NAME}"
          PATTERN='^(feature|feat|bugfix|fix|hotfix|chore|refactor|release|docs|test|codex)/[a-z0-9._-]+$'
          if [[ "${BRANCH_NAME}" =~ ${PATTERN} ]]; then
            echo "Branch name OK"
          else
            echo "::error::Branch name '${BRANCH_NAME}' does not follow the expected pattern '${PATTERN}'." >&2
            echo "Expected the branch to start with one of feature/, feat/, bugfix/, fix/, hotfix/, chore/, refactor/, release/, docs/, test/, codex/." >&2
            exit 1
          fi
          if [[ -n "${BASE_REF}" && "${BASE_REF}" != "main" ]]; then
            echo "::warning::PR base is '${BASE_REF}', expected 'main'."
          fi

  linter-run:
    name: Lint
    runs-on: ubuntu-latest
    needs: branch-status
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint checks
        run: pnpm exec nx run-many -t lint --skip-nx-cache --output-style=stream

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: linter-run
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build projects
        run: pnpm exec nx run-many -t build --configuration=production --skip-nx-cache --output-style=stream
