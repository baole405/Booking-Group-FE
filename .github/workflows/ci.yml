name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  PNPM_VERSION: 10.15.1
  NODE_VERSION: 20
  NX_NON_INTERACTIVE: "true"

jobs:
  branch-status:
    name: branch-status
    runs-on: ubuntu-latest
    steps:
      - name: Verify branch naming convention
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "Checking branch name: ${BRANCH_NAME}"
          PATTERN='^(feature|bugfix|hotfix|release|chore|codex)/[a-z0-9._-]+$'
          if [[ ! "${BRANCH_NAME}" =~ ${PATTERN} ]]; then
            echo "::error::Branch name '${BRANCH_NAME}' does not follow the expected pattern '${PATTERN}'." >&2
            echo "Expected the branch to start with one of feature/, bugfix/, hotfix/, release/, chore/, codex/." >&2
            exit 1
          fi

  infer-run:
    name: infer-run
    runs-on: ubuntu-latest
    needs: branch-status
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine affected SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
      - name: Prepare Corepack
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ github.event.pull_request.number }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-${{ github.event.pull_request.number }}-
            nx-${{ runner.os }}-
      - name: Detect secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: detect --no-color --redact --source .
      - name: Nx affected lint and typecheck
        run: pnpm exec nx affected -t lint,typecheck --output-style=stream

  tests-run:
    name: tests-run
    runs-on: ubuntu-latest
    needs: infer-run
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine affected SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
      - name: Prepare Corepack
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ github.event.pull_request.number }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-${{ github.event.pull_request.number }}-
            nx-${{ runner.os }}-
      - name: Run affected unit tests (Vitest)
        run: pnpm exec nx affected -t test --output-style=stream -- --run

  e2e-tests:
    name: e2e-tests
    runs-on: ubuntu-latest
    needs: tests-run
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine affected SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
      - name: Prepare Corepack
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ github.event.pull_request.number }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-${{ github.event.pull_request.number }}-
            nx-${{ runner.os }}-
      - name: Run affected Cypress E2E tests
        run: pnpm exec nx affected -t e2e --configuration=ci --output-style=stream

  build:
    name: build
    runs-on: ubuntu-latest
    needs: e2e-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine affected SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
      - name: Prepare Corepack
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ github.event.pull_request.number }}-${{ github.sha }}
          restore-keys: |
            nx-${{ runner.os }}-${{ github.event.pull_request.number }}-
            nx-${{ runner.os }}-
      - name: Build affected projects
        run: pnpm exec nx affected -t build --configuration=production --output-style=stream
