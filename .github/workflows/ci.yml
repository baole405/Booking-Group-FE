name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  stage-1-preflight:
    name: "Stage 1 · Secret detection & commit lint"
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name matches convention
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "Checking branch name: ${BRANCH_NAME}"
          PATTERN='^(feature|bugfix|hotfix|release|chore|codex)/[a-z0-9._-]+$'
          if [[ ! "${BRANCH_NAME}" =~ ${PATTERN} ]]; then
            echo "::error::Branch name '${BRANCH_NAME}' does not follow the expected pattern '${PATTERN}'." >&2
            echo "Expected the branch to start with one of feature/, bugfix/, hotfix/, release/, chore/, codex/." >&2
            exit 1
          fi
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint commits
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: commitlint.config.mjs
      - name: Scan for leaked secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: detect --source . --redact

  stage-2-ci:
    name: "Stage 2 · CI checks"
    runs-on: ubuntu-latest
    needs: stage-1-preflight
    steps:
      - uses: actions/checkout@v4
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: ${{ github.event.repository.default_branch }}
      - uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run affected lint checks
        run: pnpm exec nx affected -t lint --output-style=stream
      - name: Run affected type checks
        run: pnpm exec nx affected -t typecheck --output-style=stream
      - name: Run affected builds
        run: pnpm exec nx affected -t build --configuration=production --output-style=stream
      - name: Run unit tests
        run: pnpm exec nx affected -t test --output-style=stream

  stage-3-deploy:
    name: "Stage 3 · Deploy"
    runs-on: ubuntu-latest
    needs: stage-2-ci
    steps:
      - name: Deployment placeholder
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "Skipping deployment for pull request events."
            exit 0
          fi
          echo "Add deployment automation here when ready."
