name: CI

on:
  pull_request:
    branches: [main]

jobs:
  branch-status:
    name: branch-status
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name matches convention
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "Checking branch name: ${BRANCH_NAME}"
          PATTERN='^(feature|feat|bugfix|fix|hotfix|chore|refactor|release|docs|test|codex)/[a-z0-9._-]+$'; then
            echo "Branch name OK"
          if [[ ! "${BRANCH_NAME}" =~ ${PATTERN} ]]; then
            echo "::error::Branch name '${BRANCH_NAME}' does not follow the expected pattern '${PATTERN}'." >&2
            echo "Expected the branch to start with one of feature/, bugfix/, hotfix/, release/, chore/, codex/." >&2
            exit 1
          fi
          if [[ "${{ github.base_ref }}" != "main" ]]; then
            echo "::warning::PR base is '${{ github.base_ref }}', expected 'main'."
          fi
  linter-run:
    name: lint
    runs-on: ubuntu-latest
    needs: branch-status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: ./pnpm-lock.yaml
      - name: before-script
        run: |
          npm install -g pnpm@10.15.1
          corepack enable
          corepack prepare pnpm@latest-10 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install --frozen-lockfile
      - name: Run lint checks
        run: pnpm exec nx run-many -t lint --skip-nx-cache --output

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: linter-run
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js and pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: ./pnpm-lock.yaml
      - name: before-script
        run: npm install -g pnpm@10.15.1
          corepack enable
          corepack prepare pnpm@latest-10 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install --frozen-lockfile
      - name: Build projects
        run: pnpm exec nx run-many -t build --configuration=production --skip-nx-cache --output-style=stream
