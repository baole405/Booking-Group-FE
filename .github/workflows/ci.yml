name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  verify-branch-name:
    name: Verify PR branch naming
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name matches convention
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "Checking branch name: ${BRANCH_NAME}"
          PATTERN='^(feature|bugfix|hotfix|release|chore|codex)/[a-z0-9._-]+$'
          if [[ ! "${BRANCH_NAME}" =~ ${PATTERN} ]]; then
            echo "::error::Branch name '${BRANCH_NAME}' does not follow the expected pattern '${PATTERN}'." >&2
            echo "Expected the branch to start with one of feature/, bugfix/, hotfix/, release/, chore/, codex/." >&2
            exit 1
          fi

  build-and-lint:
    name: Lint and build
    runs-on: ubuntu-latest
    needs: verify-branch-name
    steps:
      - uses: actions/checkout@v4
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: main
      - uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Scan for leaked secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: detect --source . --redact
      - name: Run affected lint checks
        run: pnpm exec nx affected -t lint --output-style=stream
      - name: Run affected type checks
        run: pnpm exec nx affected -t typecheck --output-style=stream
      - name: Run affected builds
        run: pnpm exec nx affected -t build --configuration=production --output-style=stream
      - name: Run unit tests
        run: pnpm exec nx affected -t test --output-style=stream
